<!doctype html>
<html lang="en">
<head>
    <meta charset=utf-8>
    <!--
     | Version 10.2
     | Copyright 2012 Esri
     |
     | Licensed under the Apache License, Version 2.0 (the "License");
     | you may not use this file except in compliance with the License.
     | You may obtain a copy of the License at
     |
     |    http://www.apache.org/licenses/LICENSE-2.0
     |
     | Unless required by applicable law or agreed to in writing, software
     | distributed under the License is distributed on an "AS IS" BASIS,
     | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     | See the License for the specific language governing permissions and
     | limitations under the License.
    -->
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>Loading...</title>
      <link rel="shortcut icon" href="images/i_hydro.ico" />
    <link id="stylesheet" href='http://serverapi.arcgisonline.com/jsapi/arcgis/3.5/js/dojo/dojox/mobile/themes/iPhone/iPhone.css'
        rel='stylesheet' />
    <link rel="stylesheet" type="text/css" href="http://serverapi.arcgisonline.com/jsapi/arcgis/3.5/js/esri/css/esri.css" />
    <link href="styles/printMap.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">

        djConfig = (function () {
            var base = location.href.split("/");
            base.pop();
            base = base.join("/");
            return {
                async: false,
                mblHideAddressBar: false,
                packages: [{
                    name: "js",
                    location: base + "/js"
                }]
            };
        })();

    </script>
    <script type="text/javascript" src="http://serverapi.arcgisonline.com/jsapi/arcgis/?v=3.5compact">
    </script>
    <script type="text/javascript" src="js/utils.js"></script>
    <script type="text/javascript">
        dojo.require("esri.map");
        dojo.require("esri.layers.FeatureLayer");
        dojo.require("esri.tasks.geometry");

        var window_opener = window.opener;
        var tempPushPinLayer = 'tempPushPinLayer';
        var tempBuffer = 'tempBuffer';
        var tempRouteLayer = 'tempRouteLayer';
        var tempHighlightedLayer = 'tempHighlightedLayer';
        var printmap;
        var routeLayer;
        var initialExtent;
        var graphicsLayer;
        var directions;
        var directionsHeader;
        var highlightedLayer;
        var symbol;

        function Init() {
                graphicsLayer = window_opener.GetGraphicsLayer();
                routeLayer = window_opener.GetRouteLayer();
                directions = window_opener.drivingDirections;
                directionsHeader = window_opener.GetDirectionsHeader();
                highlightedLayer = window_opener.GetHighlightedPollLayer();
                printmap = new esri.Map("mapPrint", { slider: false });
                document.title = window_opener.applicationName;
                if (window_opener.isMobileDevice || window_opener.isTablet) {
                    document.getElementsByTagName('head')[0].appendChild(window_opener.appleTouchIcon);
                    document.getElementsByTagName('head')[0].appendChild(window_opener.androidTouchIcon);
                }
                dojo.connect(printmap, "onLoad", function () {
                    printmap.disablePan();
                    printmap.disableDoubleClickZoom();
                    printmap.disableKeyboardNavigation();
                    printmap.disableScrollWheelZoom();
                    printmap.disableMapNavigation();

                    var extent = null;

                    var gLayer = new esri.layers.GraphicsLayer();
                    gLayer.id = tempRouteLayer;
                    printmap.addLayer(gLayer);
                    var symbol;
                    for (var i = 0; i < routeLayer.graphics.length; i++) {
                        symbol = new esri.symbol.SimpleLineSymbol().setColor(routeLayer.graphics[i].symbol.color).setWidth(routeLayer.graphics[i].symbol.width);
                        var polyLine = new esri.geometry.Polyline(routeLayer.graphics[i].geometry.toJson());
                        AddGraphic(gLayer, symbol, polyLine);
                        if (extent) {
                            extent = extent.union(polyLine.getExtent());
                        }
                        else {
                            extent = polyLine.getExtent();
                        }
                    }

                    printmap.setExtent(extent.expand(2));



                    dojo.byId("tdFeatureName").innerHTML = window_opener.document.getElementById("spanDirectionHeader").getAttribute("featureName");
                    RemoveChildren(dojo.byId("tblDirections"));
                    var tbody = dojo.create("tbody", {}, dojo.byId("tblDirections"));

                    var trHeader = dojo.create("tr", {}, tbody);
                    dojo.addClass(trHeader, "trHeight");
                    for (var i = 0; i < directionsHeader.length; i++) {
                        var tdHeader = dojo.create("td", {}, trHeader);
                        if (i == 1) {
                            tdHeader.align = "right";
                        }
                        tdHeader.innerHTML = directionsHeader[i];
                    }

                    for (var i in directions) {
                        var tr = dojo.create("tr", {}, tbody);
                        dojo.addClass(tr, "trHeight");
                        if (i % 2 == 0) {
                            dojo.addClass(tr, "grayBackGround");
                        }
                        var td = dojo.create("td", {}, tr);
                        td.align = "left";
                        var tdMiles = dojo.create("td", {}, tr);
                        tdMiles.align = "right";
                        td.innerHTML = (Number(i) + 1) + ". " + directions[i].text;
                        tdMiles.innerHTML = (directions[i].distance) ? directions[i].distance : "";
                    }
                });

                /*Code for adding basemap layers to print*/
                var layerUrl = window_opener.GetLayerUrl();
                var baseMapLayer = new esri.layers.ArcGISTiledMapServiceLayer(layerUrl);
                printmap.addLayer(baseMapLayer);

                /*Code for getting feature layer*/
                featuresLayer = window_opener.GetFeatureLayer();
                var featureLayer = new esri.layers.FeatureLayer(featuresLayer, {
                    mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,
                    outFields: ["*"]
                });
                printmap.addLayer(featureLayer);

                dojo.connect(featureLayer, "onUpdateEnd", MapRenderComplete);

        }

        function MapRenderComplete() {
            setTimeout(function () {
                var gLayer = new esri.layers.GraphicsLayer();
                gLayer.id = tempHighlightedLayer;
                printmap.addLayer(gLayer);
                for (var j = 0; j < highlightedLayer.graphics.length; j++) {
                    var mapPoint = new esri.geometry.Point(highlightedLayer.graphics[j].geometry.x, highlightedLayer.graphics[j].geometry.y, printmap.spatialReference);
                    symbol = new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, highlightedLayer.graphics[j].symbol.size, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color(highlightedLayer.graphics[j].symbol.outline.color), 4), new dojo.Color([0, 0, 0, 0]));
                    AddGraphic(gLayer, symbol, mapPoint);
                }

                var gLayer = new esri.layers.GraphicsLayer();
                gLayer.id = tempPushPinLayer;
                printmap.addLayer(gLayer);
                for (var k = 0; k < graphicsLayer.graphics.length; k++) {
                    var mapPoint = new esri.geometry.Point(graphicsLayer.graphics[k].geometry.x, graphicsLayer.graphics[k].geometry.y, printmap.spatialReference);
                    symbol = new esri.symbol.PictureMarkerSymbol(graphicsLayer.graphics[k].symbol.url, 25, 25);
                    AddGraphic(gLayer, symbol, mapPoint);
                }

                window.print();
            }, 500);
        }

        dojo.addOnLoad(Init);
    </script>
</head>
<body class="printMapBody">
    <div class="divFeatureName">
        <table align="center" class="divfullContainer">
            <tr>
                <td id="tdFeatureName" class="tdFeatureName" align="center">
                </td>
            </tr>
        </table>
    </div>
    <div id="mapPrint" class="mapPrint">
    </div>
    <table id="tblDirections" class="tblDirections">
    </table>
</body>
</html>
